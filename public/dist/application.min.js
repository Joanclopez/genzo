"use strict";var ApplicationConfiguration=function(){var applicationModuleName="genzo",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","btford.socket-io"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("characters"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("games"),ApplicationConfiguration.registerModule("users"),angular.module("characters").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Characters","characters","dropdown","/characters(/create)?"),Menus.addSubMenuItem("topbar","characters","List Characters","characters"),Menus.addSubMenuItem("topbar","characters","New Character","characters/create")}]),angular.module("characters").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCharacters",{url:"/characters",templateUrl:"modules/characters/views/list-characters.client.view.html"}).state("createCharacter",{url:"/characters/create",templateUrl:"modules/characters/views/create-character.client.view.html"}).state("viewCharacter",{url:"/characters/:characterId",templateUrl:"modules/characters/views/view-character.client.view.html"}).state("editCharacter",{url:"/characters/:characterId/edit",templateUrl:"modules/characters/views/edit-character.client.view.html"})}]),angular.module("characters").controller("CharactersController",["$scope","$stateParams","$location","Authentication","Characters",function($scope,$stateParams,$location,Authentication,Characters){$scope.authentication=Authentication,$scope.create=function(){var character=new Characters({name:this.name});character.$save(function(response){$location.path("characters/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(character){if(character){character.$remove();for(var i in $scope.characters)$scope.characters[i]===character&&$scope.characters.splice(i,1)}else $scope.character.$remove(function(){$location.path("characters")})},$scope.update=function(){var character=$scope.character;character.$update(function(){$location.path("characters/"+character._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.characters=Characters.query()},$scope.findOne=function(){$scope.character=Characters.get({characterId:$stateParams.characterId})}}]),angular.module("characters").factory("Characters",["$resource",function($resource){return $resource("characters/:characterId",{characterId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Socket",["socketFactory",function(socketFactory){return socketFactory({prefix:"",ioSocket:io.connect("http://localhost:3000")})}]),angular.module("games").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Games","games")}]),angular.module("games").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGames",{url:"/games",templateUrl:"modules/games/views/main-view.client.view.html"}).state("createGame",{url:"/games/create",templateUrl:"modules/games/views/create-game.client.view.html"}).state("viewGame",{url:"/games/:gameId",templateUrl:"modules/games/views/view-game.client.view.html"}).state("fight",{url:"/fight/:gameId",templateUrl:"modules/games/views/fight.client.view.html"}).state("editGame",{url:"/games/:gameId/edit",templateUrl:"modules/games/views/edit-game.client.view.html"})}]),angular.module("games").controller("GamesController",["$scope","$stateParams","$location","Authentication","Games","Socket",function($scope,$stateParams,$location,Authentication,Games,Socket){function handleComplete(){sky=new createjs.Shape,sky.graphics.beginBitmapFill(loader.getResult("sky")).drawRect(0,0,w,h);var groundImg=loader.getResult("ground");ground=new createjs.Shape,ground.graphics.beginBitmapFill(groundImg).drawRect(0,0,w+groundImg.width,groundImg.height),ground.tileW=groundImg.width,ground.y=h-groundImg.height,hill=new createjs.Bitmap(loader.getResult("hill")),hill.setTransform(Math.random()*w,h-4*hill.image.height-groundImg.height,4,4),hill.alpha=.5,hill2=new createjs.Bitmap(loader.getResult("hill2")),hill2.setTransform(Math.random()*w,h-3*hill2.image.height-groundImg.height,3,3);var spriteSheet=new createjs.SpriteSheet({framerate:30,images:[loader.getResult("grant")],frames:{regX:82,height:292,count:64,regY:0,width:165},animations:{run:[0,25,"run",1.5],jump:[26,63,"run"]}});grant=new createjs.Sprite(spriteSheet,"run"),grant.y=35,stage.addChild(sky,hill,hill2,ground,grant),stage.addEventListener("stagemousedown",handleJumpStart),createjs.Ticker.timingMode=createjs.Ticker.RAF,createjs.Ticker.addEventListener("tick",tick)}function handleJumpStart(){grant.gotoAndPlay("jump")}function tick(event){var deltaS=event.delta/1e3,position=grant.x+150*deltaS,grantW=grant.getBounds().width*grant.scaleX;grant.x=position>=w+grantW?-grantW:position,ground.x=(ground.x-150*deltaS)%ground.tileW,hill.x=hill.x-30*deltaS,hill.x+hill.image.width*hill.scaleX<=0&&(hill.x=w),hill2.x=hill2.x-45*deltaS,hill2.x+hill2.image.width*hill2.scaleX<=0&&(hill2.x=w),stage.update(event)}$scope.authentication=Authentication,$scope.create=function(){var game=new Games({player1:$scope.authentication.user._id});game.$save(function(response){$location.path("fight/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(game){if(game){game.$remove();for(var i in $scope.games)$scope.games[i]===game&&$scope.games.splice(i,1)}else $scope.game.$remove(function(){$location.path("games")})},$scope.update=function(){var game=$scope.game;game.$update(function(){$location.path("games/"+game._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.games=Games.query(function(response){console.log(response),Socket.on("games",function(game){$scope.games.push(game)}),console.log("check 1",Socket)})},$scope.findOne=function(){$scope.game=Games.get({gameId:$stateParams.gameId})};var stage,w,h,loader,manifest,sky,grant,ground,hill,hill2;$scope.init=function(){stage=new createjs.Stage("testCanvas"),w=stage.canvas.width,h=stage.canvas.height,manifest=[{src:"spritesheet_grant.png",id:"grant"},{src:"sky.png",id:"sky"},{src:"ground.png",id:"ground"},{src:"hill1.png",id:"hill"},{src:"hill2.png",id:"hill2"}],loader=new createjs.LoadQueue(!1),loader.addEventListener("complete",handleComplete),loader.loadManifest(manifest,!0,"/modules/games/img/")}}]),angular.module("games").factory("Games",["$resource",function($resource){return $resource("games/:gameId",{gameId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("character",{url:"/settings/character",templateUrl:"modules/users/views/settings/character.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/settings/character")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.saveCharacter=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response,$location.path("/games")},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);